/**
 * filesize
 *
 * @copyright 2023 Jason Mulligan <jason.mulligan@avoidwork.com>
 * @license BSD-3-Clause
 * @version 10.0.12
 */const Z="array",a="bit",R="bits",k="byte",Y="bytes",c="",L="exponent",U="function",E="iec",V="Invalid number",_="Invalid rounding method",b="jedec",z="object",w=".",$="round",F="s",X="kbit",q="kB",H=" ",Q="string",W="0",m={symbol:{iec:{bits:["bit","Kibit","Mibit","Gibit","Tibit","Pibit","Eibit","Zibit","Yibit"],bytes:["B","KiB","MiB","GiB","TiB","PiB","EiB","ZiB","YiB"]},jedec:{bits:["bit","Kbit","Mbit","Gbit","Tbit","Pbit","Ebit","Zbit","Ybit"],bytes:["B","KB","MB","GB","TB","PB","EB","ZB","YB"]}},fullform:{iec:["","kibi","mebi","gibi","tebi","pebi","exbi","zebi","yobi"],jedec:["","kilo","mega","giga","tera","peta","exa","zetta","yotta"]}};function d(N,{bits:f=!1,pad:O=!1,base:o=-1,round:T=2,locale:I=c,localeOptions:D={},separator:u=c,spacer:G=H,symbols:K={},standard:e=c,output:h=Q,fullform:j=!1,fullforms:r=[],exponent:M=-1,roundingMethod:v=$,precision:B=0}={}){let t=M,l=Number(N),i=[],n=0,y=c;o===-1&&e.length===0?(o=10,e=b):o===-1&&e.length>0?(e=e===E?E:b,o=e===E?2:10):(o=o===2?2:10,e=o===10||e===b?b:E);const g=o===10?1e3:1024,x=j===!0,P=l<0,S=Math[v];if(typeof N!="bigint"&&isNaN(N))throw new TypeError(V);if(typeof S!==U)throw new TypeError(_);if(P&&(l=-l),(t===-1||isNaN(t))&&(t=Math.floor(Math.log(l)/Math.log(g)),t<0&&(t=0)),t>8&&(B>0&&(B+=8-t),t=8),h===L)return t;if(l===0)i[0]=0,y=i[1]=m.symbol[e][f?R:Y][t];else{n=l/(o===2?Math.pow(2,t*10):Math.pow(1e3,t)),f&&(n=n*8,n>=g&&t<8&&(n=n/g,t++));const s=Math.pow(10,t>0?T:0);i[0]=S(n*s)/s,i[0]===g&&t<8&&M===-1&&(i[0]=1,t++),y=i[1]=o===10&&t===1?f?X:q:m.symbol[e][f?R:Y][t]}if(P&&(i[0]=-i[0]),B>0&&(i[0]=i[0].toPrecision(B)),i[1]=K[i[1]]||i[1],I===!0?i[0]=i[0].toLocaleString():I.length>0?i[0]=i[0].toLocaleString(I,D):u.length>0&&(i[0]=i[0].toString().replace(w,u)),O&&Number.isInteger(i[0])===!1&&T>0){const s=u||w,C=i[0].toString().split(s),p=C[1]||c,A=p.length,J=T-A;i[0]=`${C[0]}${s}${p.padEnd(A+J,W)}`}return x&&(i[1]=r[t]?r[t]:m.fullform[e][t]+(f?a:k)+(i[0]===1?c:F)),h===Z?i:h===z?{value:i[0],symbol:i[1],exponent:t,unit:y}:i.join(G)}const ii=["C","CPP","JAVA"],ti={C:"C",CPP:"C++",JAVA:"Java"};export{ti as a,d as f,ii as l};
